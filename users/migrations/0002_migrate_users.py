# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-01 10:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.contrib.auth.models import User

from allauth.account.models import EmailAddress
from allauth.utils import generate_unique_username

def migrate_existing_users(apps, schema_editor):
    """
    Create Django users basing on existing one
    """

    Users = apps.get_model('users', 'Users')

    for legacy_user in Users.objects.all():

        # Migrate old users into
        new_user = User.objects.create(
            password='$'.join([
                'sha256',
                legacy_user.password_salt,
                legacy_user.password
            ]),
            is_superuser=legacy_user.internal,
            username=generate_unique_username([
                legacy_user.first_name,
                legacy_user.last_name,
                legacy_user.email
            ]),
            first_name=legacy_user.first_name,
            last_name=legacy_user.last_name,
            email=legacy_user.email,
            is_staff=legacy_user.internal,
            is_active=legacy_user.valid,
            date_joined=legacy_user.created,
        )

        new_user.save()

        # Create an Email entry for each user, if it's an internal one
        # automatically verify the email
        EmailAddress.objects.create(
            email=legacy_user.email,
            primary=True,
            verified=new_user.is_staff,
            user=new_user
        )


def remove_existing_users(apps, schema_editor):
    """
    Remove all migrated Django users
    """

    User.objects.filter(password__startswith='sha256$').delete()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='users',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),

        migrations.RunPython(migrate_existing_users, remove_existing_users),

        migrations.AlterField(
            model_name='users',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),

        migrations.AlterField(
            model_name='users',
            name='attempt',
            field=models.CharField(blank=True, max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='created',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='email',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='internal',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='last_name',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='password',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='password_salt',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='plan_id',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='users',
            name='username',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='users',
            name='valid',
            field=models.IntegerField(blank=True, null=True),
        ),
    ]
